{"mappings":"AACC,IAAWA,ECCX,MACG,MAAMC,EAAO,CACXC,SAAUC,SAASC,cAAc,oBACjCC,UAAWF,SAASC,cAAc,qBAClCE,KAAMH,SAASC,cAAc,gBAM/B,SAASG,IACPN,EAAKK,KAAKE,UAAUC,OAAO,U,CAJ7BR,EAAKC,SAASQ,iBAAiB,QAASH,GACxCN,EAAKI,UAAUK,iBAAiB,QAASH,EAK1C,EAbF,GCeCI,OAAOC,SAAW,WACZD,OAAOE,OAAOC,OAAS,KAClBC,SAAW,GACZZ,SAASa,eAAe,UAAUR,UAAUS,OAAO,iBAGnDd,SAASa,eAAe,UAAUR,UAAUU,IAAI,iBAG/CH,SAAW,IACZZ,SAASa,eAAe,UAAUR,UAAUS,OAAO,iBAGnDd,SAASa,eAAe,UAAUR,UAAUU,IAAI,gB,EF5B1D,mBADUlB,EAyBTW,OAAOQ,QAAQC,WAxBOC,UACpBrB,EAAEqB,QACDrB,EAAEsB,mBACFtB,EAAEuB,oBACFvB,EAAEwB,uBACF,SAAUC,GACR,IACE,IAAIC,EAAIC,KACNC,GAAKF,EAAEvB,UAAYuB,EAAEG,eAAeC,iBAAiBL,GACrDM,EAAI,EACNH,EAAEG,IAAMH,EAAEG,KAAOL,KAGfK,EACJ,OAAOC,QAAQJ,EAAEG,G,GAErB,mBAAqB/B,EAAEiC,UACpBjC,EAAEiC,QAAU,SAAUR,GACrB,IAAK,IAAIC,EAAIC,KAAMD,GAAK,IAAMA,EAAEQ,UAAY,CAC1C,GAAIR,EAAEL,QAAQI,GAAI,OAAOC,EACzBA,EAAIA,EAAES,U,CAER,OAAO,I,GAIfhC,SAASO,iBAAiB,oBAAoB,W,kDAGxC0B,EAAejC,SAASC,cAAiB,sBAC3CiC,EAAmBlC,SAAA2B,iBAAc,mBAGnCQ,EAAAC,SAA8B,SACRC,GACpBA,EAAA9B,iBAAA,kBACIe,G,mBAKFtB,SAASsC,KAAKjC,UAAUU,IAAI,c,sCAGdf,SAAKC,cAAa,sBAClBsC,EAAS,M,wBAOvBN,EAAQ5B,UAAUU,IAAI,S,OAI1BmB,EAAaE,SAAQ,SAAUC,GAC7BA,EAAK9B,iBAAiB,SAAS,SAAUe,GACvC,IAAIkB,EAAchB,KAAKM,QAAQ,UAC/B9B,SAASsC,KAAKjC,UAAUS,OAAO,cAC/B0B,EAAYnC,UAAUS,OAAO,UAC7BmB,EAAQ5B,UAAUS,OAAO,S,OAI7Bd,SAASsC,KAAK/B,iBACZ,SACA,SAAUe,GAGG,IAFDA,EAAEmB,UAGVzC,SAASC,cAAc,iBAAiBI,UAAUS,OAAO,UACzDd,SAASC,cAAc,sBAAsBI,UAAUS,OAAO,UAC9Dd,SAASsC,KAAKjC,UAAUS,OAAO,c,IAGnC,GAGFmB,EAAQ1B,iBAAiB,SAAS,SAAUe,GACtCA,EAAEoB,SAAWpB,EAAEqB,gBAGnB3C,SAASC,cAAc,iBAAiBI,UAAUS,OAAO,UACzDU,KAAKnB,UAAUS,OAAO,UACtBd,SAASsC,KAAKjC,UAAUS,OAAO,c,OGtFnC8B,EAAE,eAAeC,MAAM,CAIrBC,UAAU,EACVC,MAAO,IACPC,eAAgB,EAChBC,gBAAgB,EAChBC,aAAc,EAEdC,WAAY,CACV,CACEC,WAAY,KACZC,SAAU,CACRH,aAAc,IAGlB,CACEE,WAAY,IACZC,SAAU,CACRH,aAAc,OCrBtBN,EAAE,gBAAgBC","sources":["src/js/modal.js","src/js/mobile-menu.js","src/js/header-scroll.js","src/js/slick.js","src/js/single.js"],"sourcesContent":["\n!(function (e) {\n  'function' != typeof e.matches &&\n    (e.matches =\n      e.msMatchesSelector ||\n      e.mozMatchesSelector ||\n      e.webkitMatchesSelector ||\n      function (e) {\n        for (\n          var t = this,\n            o = (t.document || t.ownerDocument).querySelectorAll(e),\n            n = 0;\n          o[n] && o[n] !== t;\n\n        )\n          ++n;\n        return Boolean(o[n]);\n      }),\n    'function' != typeof e.closest &&\n      (e.closest = function (e) {\n        for (var t = this; t && 1 === t.nodeType; ) {\n          if (t.matches(e)) return t;\n          t = t.parentNode;\n        }\n        return null;\n      });\n})(window.Element.prototype);\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  /* Записываем в переменные массив элементов-кнопок и подложку.\n      Подложке зададим id, чтобы не влиять на другие элементы с классом overlay*/\n  var modalButtons = document.querySelectorAll('.js-open-modal'),\n    overlay = document.querySelector('.js-backdrop-modal'),\n    closeButtons = document.querySelectorAll('.js-modal-close');\n\n  /* Перебираем массив кнопок */\n  modalButtons.forEach(function (item) {\n    /* Назначаем каждой кнопке обработчик клика */\n    item.addEventListener('click', function (e) {\n      /* Предотвращаем стандартное действие элемента. Так как кнопку разные\n            люди могут сделать по-разному. Кто-то сделает ссылку, кто-то кнопку.\n            Нужно подстраховаться. */\n      e.preventDefault();\n      document.body.classList.add('modal-open');\n      /* При каждом клике на кнопку мы будем забирать содержимое атрибута data-modal\n            и будем искать модальное окно с таким же атрибутом. */\n      var modalId = this.getAttribute('data-modal'),\n        modalElem = document.querySelector(\n          '.modal[data-modal=\"' + modalId + '\"]'\n        );\n\n      /* После того как нашли нужное модальное окно, добавим классы\n            подложке и окну чтобы показать их. */\n      modalElem.classList.add('active');\n      overlay.classList.add('active');\n    }); // end click\n  }); // end foreach\n\n  closeButtons.forEach(function (item) {\n    item.addEventListener('click', function (e) {\n      var parentModal = this.closest('.modal');\n      document.body.classList.remove('modal-open');\n      parentModal.classList.remove('active');\n      overlay.classList.remove('active');\n    });\n  }); // end foreach\n\n  document.body.addEventListener(\n    'keyup',\n    function (e) {\n      var key = e.keyCode;\n\n      if (key == 27) {\n        document.querySelector('.modal.active').classList.remove('active');\n        document.querySelector('.js-backdrop-modal').classList.remove('active');\n        document.body.classList.remove('modal-open');\n      }\n    },\n    false\n  );\n\n  overlay.addEventListener('click', function (e) {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    document.querySelector('.modal.active').classList.remove('active');\n    this.classList.remove('active');\n    document.body.classList.remove('modal-open');\n  });\n}); // end ready\n\n// 1. На кнопку відкриття модалки доати клас js-open-modal, атрибут data-modal=\"1\" (1 це номер модалки, значення довільне)\n\n// 2. В кінці боді створити один спільний бекдроп  з класом js-overlay-modal, в який вкласти усі модалки\n\n// 3. На кнопки закриття модалок повішати клас js-modal-close\n\n// 4. На саму модалку задати клас modal,\n// \tатрибут data-modal=\"1\" (де 1 це довільне значення, але має співпадати з таким самим атрибутом на кнопці, яка відкривала цю модалку)\n\n// При відкритті модалки на неї і на бекдроп буде додаватися клас active, тому треба відповідні стилі додати на модалку і бекдроп. Є клас active, вони видимі, немає -- невидимі\n","\n\n(() => {\n    const refs = {\n      openMenu: document.querySelector(\"[data-menu-open]\"),\n      closeMenu: document.querySelector(\"[data-menu-close]\"),\n      menu: document.querySelector(\"[data-menu]\"),\n    };\n  \n    refs.openMenu.addEventListener(\"click\", toggleMenu);\n    refs.closeMenu.addEventListener(\"click\", toggleMenu);\n  \n    function toggleMenu() {\n      refs.menu.classList.toggle(\"is-open\");\n    }\n  })();","// window.onscroll = function () {\n//     if (window.screen.width >= 768) {\n//       scrollY <= 70\n//         ? document.getElementById('header').classList.remove('header-scroll')\n//         : document.getElementById('header').classList.add('header-scroll');\n//     } else {\n//         if(  scrollY <= 120){\n//             document.getElementById('header').classList.remove('header-scroll')}\n//         else{\n//             document.getElementById('header').classList.add('header-scroll');\n//         }\n    \n        \n        \n//     }\n//   };\n\n  window.onscroll = function () {\n    if (window.screen.width >= 1200) {\n        if(  scrollY <= 70){\n            document.getElementById('header').classList.remove('header-scroll')\n        }\n        else{\n            document.getElementById('header').classList.add('header-scroll');\n        }\n    } else {\n        if(  scrollY <= 120){\n            document.getElementById('header').classList.remove('header-scroll')\n        }\n        else{\n            document.getElementById('header').classList.add('header-scroll');\n        }\n    }\n  };","\n$('.responsive').slick({\n  // dots: true,\n  // prevArrow: '<button type=\"button\" class=\"my-slick-prev\">&xlarr;</button>',\n  // nextArrow: '<button type=\"button\" class=\"my-slick-next\">&xrarr;</button>',\n  infinite: true,\n  speed: 300,\n  slidesToScroll: 1,\n  adaptiveHeight: true,\n  slidesToShow: 2,\n\n  responsive: [\n    {\n      breakpoint: 1200,\n      settings: {\n        slidesToShow: 2,\n      },\n    },\n    {\n      breakpoint: 768,\n      settings: {\n        slidesToShow: 1,\n      },\n    },\n    // You can unslick at a given breakpoint now by adding:\n    // settings: \"unslick\"\n    // instead of a settings object\n  ],\n});\n","$('.single-item').slick();"],"names":["e1","refs","openMenu","document","querySelector","closeMenu","menu","toggleMenu","classList","toggle","addEventListener","window","onscroll","screen","width","scrollY","getElementById","remove","add","Element","prototype","matches","msMatchesSelector","mozMatchesSelector","webkitMatchesSelector","e","t","this","o","ownerDocument","querySelectorAll","n","Boolean","closest","nodeType","parentNode","overlay","closeButtons","modalButtons","forEach","item","body","modalId","parentModal","keyCode","target","currentTarget","$","slick","infinite","speed","slidesToScroll","adaptiveHeight","slidesToShow","responsive","breakpoint","settings"],"version":3,"file":"index.3a8da60d.js.map"}